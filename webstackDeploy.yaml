---
- name: Setup Web Stack on Rocky Linux 8 for Nextcloud
  hosts: cloud.wefixdit.com
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: true

  vars:
    ansible_python_interpreter: /usr/bin/python3
    http_port: 80
    https_port: 443
    apache_port: 8080
    php_fpm_pool_name: www
    postgresql_dbname: nextcloud
    postgresql_user: nextcloud
    postgresql_password: "{{ lookup('password', '/dev/null length=16 chars=ascii_letters,digits') }}"
    redis_password: "{{ lookup('password', '/dev/null length=16 chars=ascii_letters,digits') }}"

  tasks:
    - name: Import REMI GPG key
      rpm_key:
        state: present
        key: https://rpms.remirepo.net/RPM-GPG-KEY-remi
    - name: Install REMI repository
      dnf:
        name: "https://rpms.remirepo.net/enterprise/remi-release-8.rpm"
        state: present
        disable_gpg_check: yes

    - name: Reset PHP module
      command: dnf module reset php -y

    - name: Enable REMI PHP 8.2 module
      command: dnf module enable php:remi-8.2 -y

    - name: Ensure EPEL repository is installed
      dnf:
        name: epel-release
        state: present

    - name: Install Python six library
      dnf:
        name: python3-six
        state: present

    - name: Install Python PostgreSQL library
      dnf:
        name: python3-psycopg2
        state: present

    - name: Install Nginx
      dnf:
        name: nginx
        state: present
    
    - name: Configure Nginx as a reverse proxy and caching server
      template:
        src: templates/nginx.conf.j2
        dest: /etc/nginx/nginx.conf
      notify:
        - reload nginx

    - name: Start and enable Nginx service
      systemd:
        name: nginx
        enabled: yes
        state: started

    - name: Install Apache
      dnf:
        name: httpd
        state: present

    - name: Update Apache to listen on port {{ apache_port }}
      lineinfile:
        path: /etc/httpd/conf/httpd.conf
        regexp: '^Listen '
        line: "Listen {{ apache_port }}"
        backup: yes

    - name: Start and enable Apache service
      systemd:
        name: httpd
        enabled: yes
        state: started

    - name: Install PHP-FPM and extensions
      dnf:
        name:
          - php-fpm
          - php-pgsql
          - php-redis
        state: present
    
    - name: Configure PHP-FPM
      template:
        src: templates/php-fpm.conf.j2
        dest: /etc/php-fpm.d/{{ php_fpm_pool_name }}.conf
      notify:
        - restart php-fpm

    - name: Install and configure database (PostgreSQL) & caching (Redis)
      block:
        - name: Install Redis and PostgreSQL
          dnf:
            name:
              - redis
              - postgresql-server
              - postgresql-contrib
            state: present

        - name: Initialize PostgreSQL database
          become_user: postgres
          command: /usr/bin/initdb -D /var/lib/pgsql/data/
          args:
            creates: /var/lib/pgsql/data/postgresql.conf

        - name: Configuration for Redis to require a password
          lineinfile:
            path: /etc/redis.conf
            regexp: '^#?requirepass'
            line: "requirepass {{ redis_password }}"
            backup: yes
          notify:
            - restart redis

        - name: Start and enable services
          systemd:
            name: "{{ item.name }}"
            enabled: yes
            state: started
          loop:
            - {name: 'redis'}
            - {name: 'postgresql'}
            - {name: 'php-fpm'}
            - {name: 'httpd'}
    
        - name: Create PostgreSQL database
          become_user: postgres
          postgresql_db:
            name: "{{ postgresql_dbname }}"

        - name: Create PostgreSQL user with password
          become_user: postgres
          postgresql_user:
            db: "{{ postgresql_dbname }}"
            name: "{{ postgresql_user }}"
            password: "{{ postgresql_password }}"
            priv: ALL

  handlers:
    - name: restart php-fpm
      systemd:
        name: php-fpm
        state: restarted

    - name: restart redis
      systemd:
        name: redis
        state: restarted

    - name: reload nginx
      systemd:
        name: nginx
        state: reloaded
